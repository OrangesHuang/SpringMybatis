buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://plugins.gradle.org/m2/' }  // 用于下载Gradle插件
        maven { url 'http://jcenter.bintray.com/' }
        maven { url 'http://repo1.maven.org/maven2/' }
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/libs-milestone/' }
        maven { url 'http://repo.spring.io/release' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE' // org.springframework.boot的构建版本控制
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.1.RELEASE' // 用于管理jar包之间的依赖问题
    }
}

apply plugin: 'java'                            //  java插件，同时也声明是一个java项目
apply plugin: 'idea'                            //  idea插件，可直接让IDEA集成能力
apply plugin: 'org.springframework.boot'        //  管理这个组织的jar包插件
apply plugin: 'io.spring.dependency-management' //  管理jar包之间的依赖关系

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")             //  在idea中run后输出的class目录
    }
}

jar {
    baseName = 'SpringMybatis'
    version = new Date().format("yyyy-MM-dd_HH:mm").toString()  //  根据当前时间控制版本
    // e.g. Gradle是基于Groovy的构建语言，本身也是JVM语言。故能够直接在此文件中书写Java代码
}

bootRun {
    addResources = false
    systemProperties = System.properties
    main = 'com.avcdata.Application'        // 程序运行的主文件，每个项目需指定一个运行入口
}

repositories {
    mavenLocal()
    maven { url 'http://jcenter.bintray.com/' }
    maven { url 'http://repo1.maven.org/maven2/' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'http://repo.spring.io/libs-milestone/' }
    maven { url 'http://repo.spring.io/release' }
    maven { url 'http://repo.spring.io/milestone' }
}

dependencies {
    //  依赖于buildscript中dependencies的spring-boot-gradle-plugin插件
    //  org.springframework.boot组织中的包，会随着如上插件的版本变更而变更
    compile( 'org.springframework.boot:spring-boot-starter-web') // SpringBoot Web
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //  java连接MySQL的工具包，用于在application.yml配置文件中指定driver驱动
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'
    //  若使用需在IDEA的偏好设置中打开annotation，打开注解
    //  可实现Bean自动生成getter和setter，只需要打上@Data注解
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.12'
    // Mybatis with plugin e.g. MyMapper And PageHelper
    // Mybatis插件，用于向数据库curd
    // 在配置文件中指定Mybatis的model目录，以及xml目录, 即可使用
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.2.0'
    compile group: 'tk.mybatis', name: 'mapper-spring-boot-starter', version: '1.0.0'
    compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.1.0'
    //  druid's DataSource
    //  引入druid数据源，可直接在网页上查看连接池信息
    compile group: 'com.alibaba', name: 'druid', version: '1.0.29'
}

